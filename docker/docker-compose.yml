services:
  # 后端服务
  backend:
    build:
      context: ./nest-supabase-prisma
      dockerfile: Dockerfile
    container_name: fullstack-backend
    restart: unless-stopped
    # 环境变量由后端容器内的 .env.production 文件管理
    # Docker 不再注入环境变量，完全由 NestJS ConfigModule 处理
    volumes:
      - backend_logs:/app/logs
    networks:
      - app-network

  # 前端服务
  frontend:
    build:
      context: ./react-mobx-tailwindcss
      dockerfile: Dockerfile
    container_name: fullstack-frontend
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - backend

  # 主 Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: fullstack-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - app-network
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  backend_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
